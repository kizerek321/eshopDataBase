IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Supplier')
BEGIN
	CREATE TABLE Supplier (
		SupplierID INT PRIMARY KEY IDENTITY,
		Name NVARCHAR(255) NOT NULL,
		ContactPerson NVARCHAR(255),
		Phone VARCHAR(20),
		Email NVARCHAR(255),
		Address NVARCHAR(MAX)
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Delivery')
BEGIN
	CREATE TABLE Delivery (
		DeliveryID INT PRIMARY KEY IDENTITY,
		SupplierID INT NOT NULL,
		DeliveryDate DATE NOT NULL,
		TotalCost FLOAT NOT NULL,
		Invoice NVARCHAR(MAX),
		FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID) ON UPDATE CASCADE
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Product')
BEGIN
	CREATE TABLE Product (
		ProductID INT PRIMARY KEY IDENTITY,
		Name NVARCHAR(255) NOT NULL,
		Description NVARCHAR(MAX),
		Category NVARCHAR(255),
		Price FLOAT NOT NULL,
		CurrentStock INT NOT NULL,
		Size NVARCHAR(50),
		Color NVARCHAR(50)
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DeliveredItem')
BEGIN
	CREATE TABLE DeliveredItem (
		DeliveredItemID INT PRIMARY KEY IDENTITY,
		DeliveryID INT NOT NULL,
		ProductID INT NOT NULL,
		Quantity INT NOT NULL,
		Price FLOAT NOT NULL,
		FOREIGN KEY (DeliveryID) REFERENCES Delivery(DeliveryID) ON UPDATE CASCADE,
		FOREIGN KEY (ProductID) REFERENCES Product(ProductID) ON UPDATE CASCADE
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Courier')
BEGIN
	CREATE TABLE Courier (
		CompanyID INT PRIMARY KEY IDENTITY,
		CompanyName NVARCHAR(255) NOT NULL
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Customer')
BEGIN
	CREATE TABLE Customer (
		CustomerID INT PRIMARY KEY IDENTITY,
		Name NVARCHAR(255) NOT NULL,
		ShippingAddress NVARCHAR(MAX),
		Phone VARCHAR(20),
		Email NVARCHAR(255),
		BillingAddress NVARCHAR(MAX)
	);
END;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Order')
BEGIN
	CREATE TABLE [Order] (
		OrderID INT PRIMARY KEY IDENTITY,
		CustomerID INT NOT NULL,
		CourierID INT NOT NULL,
		OrderDate DATE NOT NULL,
		TotalAmount FLOAT NOT NULL,
		Status NVARCHAR(50) CHECK (Status IN ('Delivered', 'Sent', 'Prepare')),
		FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID) ON UPDATE CASCADE,
		FOREIGN KEY (CourierID) REFERENCES Courier(CompanyID) ON UPDATE CASCADE
	);
END;


CREATE TABLE Payment (
	PaymentID INT PRIMARY KEY IDENTITY,
	OrderID INT NOT NULL,
	CustomerID INT NOT NULL,
	PaymentDate DATE NOT NULL,
	Amount FLOAT NOT NULL,
	PaymentMethod NVARCHAR(50) CHECK (PaymentMethod IN ('Blik', 'Credit Card', 'Bank Transfer', 'Platnosci24')),
	Status NVARCHAR(50) CHECK (Status IN ('Pending', 'Paid', 'Failed')),
	FOREIGN KEY (OrderID) REFERENCES [Order](OrderID) ON UPDATE CASCADE,
	FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID) ON UPDATE NO ACTION
);


CREATE TABLE OrderItem (
		OrderedID INT PRIMARY KEY IDENTITY,
		ProductID INT NOT NULL,
		OrderID INT NOT NULL,
		Quantity INT NOT NULL,
		Price FLOAT NOT NULL,
		FOREIGN KEY (ProductID) REFERENCES Product(ProductID) ON UPDATE CASCADE,
		FOREIGN KEY (OrderID) REFERENCES [Order](OrderID) ON UPDATE CASCADE
);
